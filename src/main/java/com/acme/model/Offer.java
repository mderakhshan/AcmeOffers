package com.acme.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.google.gson.Gson;
import org.hibernate.validator.constraints.Length;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.math.BigDecimal;
import java.util.Date;
/**
 * Created by Mir on 05/10/2016.
 */

@Entity
@Table(name = "offer")
public class Offer {

    // Types of offer accepted
    public enum OfferType { SERVICE,  PRODUCT }

    private OfferType type;

    // Unique ID for each offer generated by the system
    private long id;

    // Title of the offer. It must be unique to each offer
    private String title;

    // Long description of the offer
    private String description;

    // Legal Terms and Conditions of the offer
    private String terms;

    // The currency of the offer price
    private String currencyCode;

    // The price of the offer
    private BigDecimal price;

    // The date the offer is created. This is created by the database at the time the offer is inserted into the Offer table
    private Date createDate;

    /**
     * Number of decimals to retain in the price property
     */
    private static int DECIMALS = 2;
    private static int ROUNDING_MODE = BigDecimal.ROUND_HALF_UP;

    @Id
    @Column
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }

    @NotNull
    @Enumerated(EnumType.STRING)
    @Column (name="type")
    public OfferType getType() { return type; }
    public void setType(OfferType type) { this.type = type; }

    @NotNull
    @Length(min = 1, max = 40)
    @Column(name = "title", unique=true)
    public String getTitle() {
        return title;
    }
    public void setTitle(String title) {
        this.title = title;
    }

    @Length(max = 1024)
    @Column(name = "description")
    public String getDescription() {
        return description;
    }
    public void setDescription(String description) {
        this.description = description;
    }

    @NotNull
    @Length(min = 1, max = 1024 )
    @Column(name = "terms")
    public String getTerms() {
        return terms;
    }
    public void setTerms(String terms) {
        this.terms = terms;
    }

    @NotNull
    @Length(min = 3, max = 3)
    @Column(name = "currency_code")
    public String getCurrencyCode() {
        return currencyCode;
    }
    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    @NotNull
    @Column(name = "price")
    public BigDecimal getPrice() {
        return price;
    }
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @Column(name = "create_date")
    @Temporal(TemporalType.TIMESTAMP)
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    public Date getCreateDate() {
        return createDate;
    }
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    //
    // Constructors
    //
    public Offer () {}

    public Offer(OfferType type, String title, String description, String
            terms, String currencyCode, BigDecimal price) {
        this.type = type;
        this.title = title;
        this.description = description;
        this.terms = terms;
        this.currencyCode = currencyCode;
        this.price = rounded(price);
    }

    /**
     * Converts a decimal by rounding it to number of decimal places defined by constant <code>DECIMALS</code>
     *
     * @param number
     *          number
     * @return
     *          the converted big decimal
     */
    public static BigDecimal rounded(BigDecimal number){
        return (number == null ? null : number.setScale(DECIMALS, ROUNDING_MODE));
    }

    /* (non-Javadoc)
         * @see java.lang.Object#toString()
    */
    @Override
    public String toString() {
        Gson gson = new Gson();
        return (gson.toJson(this));
    }
}
